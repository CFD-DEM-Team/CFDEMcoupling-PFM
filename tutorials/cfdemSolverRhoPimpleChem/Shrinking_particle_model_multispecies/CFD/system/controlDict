/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.3.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     cfdemSolverRhoPimpleChem;

startFrom       startTime;

startTime       0;

stopAt          endTime;

endTime         5.0;

deltaT          0.0001;

writeControl    timeStep;

writeInterval   50;

purgeWrite      0;

writeFormat     ascii;

writePrecision  10;

writeCompression off;

timeFormat      general;

timePrecision   6;

runTimeModifiable true;

adjustTimeStep  no;

maxCo           0.5;

maxDeltaT       0.1;


// ************************************************************************* //
 libs (  
        "libfieldFunctionObjects.so"
     );

functions
{
    probes1
    {
	type probes;

        functionObjectLibs ("libsampling.so");

	#include "probesDict";
    }
  
    globalMassFrac
    {          
        type            volRegion;
        libs ("libfieldFunctionObjects.so");
        writeControl   timeStep;//outputTime; 
        writeInterval  1;
        log             true;
        writeFields     false;
        regionType      all;
        name            c0;
        operation       weightedVolAverage;
        weightField     rhoeps;
        fields
        (
            O2
            CO2
            CO
            N2
        );
    }

    globalMass
    {          
        type            volRegion;
        libs ("libfieldFunctionObjects.so");
        writeControl   timeStep;//outputTime; 
        writeInterval  1;
        log             true;
        writeFields     false;
        regionType      all;
        name            c1;
        operation       volIntegrate;
        fields
        (
            rhoeps
            rho
        );
    }
} 

// ************************************************************************* //
 
 /* // IF swak4Foam is installed following can be used;
   volumetricFlowSurfaceField
   {
        type patchExpression;
        outputControlMode timeStep;
        outputInterval    1;
        verbose true;
        accumulations ( sum  );
        patches ( outlet );
        expression "CO2";
    }
    
    massFlowSurfaceField
    {
        $volumetricFlowSurfaceField;
        patches ( outlet );
        variables ("Area=0.25;"
                    
        );
        expression "CO2*rho*Area*U";
    }

    CO2_Mass_in_Volume
    {
        type                swakExpression;
        valueType           internalField; //patch;
        //aliases{alpha alpha.water;}
        //patchName           outlet;
        verbose             true;
        expression          "rho*voidfraction*CO2*vol()";
        accumulations       ( sum );
        outputControlMode   timeStep; //outputTime;
        outputInterval      1;
    }
    
    OutletMassFlow-CO2
    {
        type patchExpression;
        accumulations (
            sum
        );
        patches (
            outlet
        );
        expression "CO2";
        verbose true;
        autoInterpolate true;
    }
    
    CO2_Concentration_in_Volume
    {
        type                swakExpression;
        valueType           internalField; //patch;
        //aliases{alpha alpha.water;}
        //patchName           outlet;
        verbose             true;
        expression          "CO2";
        accumulations       ( sum );
        outputControlMode   timeStep; //outputTime;
        outputInterval      1;
    }
    
    O2_Mass_in_Volume
    {
        type                swakExpression;
        valueType           internalField; //patch;
        //aliases{alpha alpha.water;}
        //patchName           outlet;
        verbose             true;
        expression          "rho*voidfraction*O2*vol()";
        accumulations       ( sum );
        outputControlMode   timeStep; //outputTime;
        outputInterval      1;
    }
   
    O2_Concentration_in_Volume
    {
        type                swakExpression;
        valueType           internalField; //patch;
        //aliases{alpha alpha.water;}
        //patchName           outlet;
        verbose             true;
        expression          "O2";
        accumulations       ( sum );
        outputControlMode   timeStep; //outputTime;
        outputInterval      1;
    }
    
    OutletMassFlow-O2
    {
        type patchExpression;
        accumulations (
            sum
        );
        patches (
            outlet
        );
        expression "O2";
        verbose true;
    } */
