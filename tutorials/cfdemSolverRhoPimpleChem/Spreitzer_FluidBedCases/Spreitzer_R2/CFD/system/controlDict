/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.3.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     cfdemSolverRhoPimpleChem; 

startFrom       startTime;

startTime       0.0;

stopAt          endTime;

endTime         70;

deltaT          0.0005; //0.00025;

writeControl    timeStep; 

writeInterval   5000; 

purgeWrite      0;

writeFormat     ascii;

writePrecision  6;

writeCompression off;

timeFormat      general;

timePrecision   6;

runTimeModifiable false;

adjustTimeStep  no;

maxCo           0.5;

maxDeltaT       0.1;


// ************************************************************************* //
 libs (  
        "libfieldFunctionObjects.so"
     );

functions
{
    moleFrac
    {
        type	rhoReactionThermoMoleFractions;
    } 
    
    residuals
    {
        type            residuals;
        functionObjectLibs ("libutilityFunctionObjects.so");
        enabled         true;
        outputControl   timeStep;
        outputInterval  1;

        fields
        (
            p
            U
        );
    }
    
    gasResidual
        {
        type            residuals;
        functionObjectLibs ("libutilityFunctionObjects.so");
        enabled         true;
        outputControl   timeStep;
        outputInterval  1;

        fields
        (
            CO
            CO2
            H2
            H2O
            N2
        );
    }
    
    probes1
    {
	type probes;

        functionObjectLibs ("libsampling.so");

	#include "probesDict";
    }


    fieldMinMax1
    {
    	type            fieldMinMax;
    	libs            ("libfieldFunctionObjects.so");
	fields          (U);	
	// Report the location of the field extrema
	location   yes;
	// Type of extrema for rank > 0 primitives
	mode	magnitude; // magnitude | component
     }
    

  
    globalMassFrac
    {          
        type            volRegion;
        libs ("libfieldFunctionObjects.so");
        writeControl   	timeStep;//outputTime; 
        writeInterval  	1;
        log             true;
        writeFields     false;
        regionType      all;
        name            c0;
        operation       weightedVolAverage;
        weightField     rhoeps;
        fields
        (
            H2
            H2O
            CO2
            CO
            N2
        ); 
    } 

    globalMass
    {          
        type            volRegion;
        libs ("libfieldFunctionObjects.so");
        writeControl   timeStep;//outputTime; 
        writeInterval   1;
        log             true;
        writeFields     false;
        regionType      all;
        name            c1;
        operation       volIntegrate;
        fields
        (
            rhoeps
            rho
        );
    } 
} 

// ************************************************************************* //
